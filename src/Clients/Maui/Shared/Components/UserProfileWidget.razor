@using BlazorBoilerplate.Shared.Models.Account
@using Microsoft.AspNetCore.Components
@inject AuthenticationStateProvider authStateProvider
@inject IStringLocalizer<Global> L

<AuthorizeView>
    <Authorized>
        <div class="drawer-profile">
            <div class="triangle-container">
                <div class="triangles">
                </div>
            </div>
            @if (userViewModel == null)
            {
                <MudProgressCircular Color="Color.Default" Indeterminate="true" />
            }
            else
            {
                <MudTooltip Text="@userViewModel.UserName" Placement="Placement.End">
                    <MudButton StartIcon="@Icons.Material.Filled.AccountCircle" Color="Color.Inherit" Link=@($"{MauiProgram.ServerAddres}/account/profile") Style="min-width: auto;">
                        @L["Profile"]
                    </MudButton>
                </MudTooltip>
                <Login ShowLogOutLabel />
            }
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="drawer-profile">
            <div class="triangle-container">
                <div class="triangles">
                </div>
            </div>
            <Login ShowLogInLabel="true" />
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {

    [CascadingParameter]
    Task<AuthenticationState> authenticationStateTask { get; set; }

    UserViewModel userViewModel;

    protected override async Task OnParametersSetAsync()
    {
        userViewModel = null;
        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
            userViewModel = await ((IdentityAuthenticationStateProvider)authStateProvider).GetUserViewModel();
    }
}