@using BlazorBoilerplate.Shared.Extensions
@using BlazorBoilerplate.Theme.Material.Shared.Components
@using BlazorBoilerplateMaui.Shared.Layouts
@using BlazorBoilerplate.UI.Base.Shared.Components
@using BlazorBoilerplateMaui.Shared.Components
@using BlazorBoilerplate.Shared.Services
@using BlazorBoilerplate.Shared.Localizer
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using System.Reflection
@using Microsoft.Extensions.Localization
@using Microsoft.JSInterop
@using MudBlazor
@using System.Runtime.InteropServices
@using System.Globalization
@inject IJSRuntime js
@inject IStringLocalizer<Global> L


<MudThemeProvider Theme="@mudTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<Router AppAssembly="typeof(Main).Assembly">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="typeof(MainLayout)">
            <Authorizing>
                <AuthorizingInProgress />
            </Authorizing>
            <NotAuthorized>
                @if (!context.User.Identity.IsAuthenticated)
                {
                    <OidcLogin />
                }
                else
                {
                    <UserNotAuthorized />
                }
            </NotAuthorized>
        </AuthorizeRouteView>
    </Found>
    <NotFound>
        <CascadingAuthenticationState>
            <LayoutView Layout="typeof(MainLayout)">
                <PageNotFound />
            </LayoutView>
        </CascadingAuthenticationState>
    </NotFound>
</Router>

@code
{
    MudTheme mudTheme = new MudTheme()
        {
            Palette = new Palette()
            {
                Primary = "#2e7d32",
                AppbarBackground = "#2e7d32",
            }
        };

    protected override async Task OnInitializedAsync()
    {
        var cookieCulture = await js.GetAspNetCoreCultureCookie();

        if (!string.IsNullOrWhiteSpace(cookieCulture))
        {
            CultureInfo.DefaultThreadCurrentCulture = new CultureInfo(cookieCulture);
            CultureInfo.DefaultThreadCurrentUICulture = CultureInfo.CurrentCulture;
        }
        else
        {
            await js.SetAspNetCoreCultureCookie(Thread.CurrentThread.CurrentUICulture.Name);
        }
    }
}